// This code compare the broadening taking in count the acceptance correction 
// and the radiative correction
// The code divide the Phi histograms genenrated by AccCorrection.cpp and the ones
// generated by genRC.cpp
// it can be compiled with
// g++ -Wall -fPIC -I./include `root-config --cflags` DivAccRc.cpp -o ./bin/DivAccRc  `root-config --glibs` ./include/Broad_Rc.h

#include "Broad_Rc.h"

int main() {

    TFile* inputFileAcc  = new TFile(inputDirectory + "Pt_broad_hist_Zh.root",  "READ");
    TFile* inputFileRC = new TFile(inputDirectory + "Pt_broad_hist_Zh_Rc.root", "READ");

    TGraphErrors* g[N_STARGETS][N_PION];

    for(int nPion = 1; nPion <= N_PION; nPion++) { // Loops in every number of pion

        TH1F* histBroadening[N_STARGETS], *histBroadeningRC[N_STARGETS], *histRatio[N_STARGETS];

        //C
        histBroadening[0]  = (TH1F*) inputFileAcc->Get(Form("PtBroad_Zh_C_%i", nPion));
        //Fe
        histBroadening[1]  = (TH1F*) inputFileAcc->Get(Form("PtBroad_Zh_Fe_%i", nPion));
        //Pb
        histBroadening[2]  = (TH1F*) inputFileAcc->Get(Form("PtBroad_Zh_Pb_%i", nPion));

        //C
        histBroadeningRC[0]  = (TH1F*) inputFileRC->Get(Form("PtBroad_Zh_C_%i",  nPion));
        //Fe
        histBroadeningRC[1]  = (TH1F*) inputFileRC->Get(Form("PtBroad_Zh_Fe_%i", nPion));
        //Pb
        histBroadeningRC[2]  = (TH1F*) inputFileRC->Get(Form("PtBroad_Zh_Pb_%i", nPion));


        for(int i = 0 ; i < N_STARGETS ; i++) {
            histRatio[i] = new TH1F(Form("histRatio_%i",i), "", N_Zh, Zh_BINS);
            histRatio[i]->Divide(histBroadening[i], histBroadeningRC[i],  1, 1);
            g[i][nPion-1] = (TGraphErrors*) TH1TOTGraph(histRatio[i]);
            delete histRatio[i];
        }


    } // End number pion event loop

    TFile* outputFile = new TFile(outputDirectory + "RatioAccRc.root", "RECREATE");

    outputFile->cd();

    for(int j = 0; j < N_PION; j++) {
        g[0][j]->Write(Form("PtBroad_Zh_C_RatioAccRc_%i",  j)); 
        g[1][j]->Write(Form("PtBroad_Zh_Fe_RatioAccRc_%i", j));
        g[2][j]->Write(Form("PtBroad_Zh_Pb_RatioAccRc_%i", j));
    }

    gROOT->cd();
    outputFile->Close();
    inputFileRC->Close();
    inputFileAcc->Close();

}
